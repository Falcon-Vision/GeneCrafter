name: Building and testing .NET

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main
  #     - stage
  pull_request:
    branches:
      - main
      - stage

jobs:
  build:

    name: build-${{matrix.os}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        # os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Restore
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --logger trx --results-directory coverage

    - name: Merge coverage reports
      run: |
        dotnet tool install --global dotnet-coverage
        cd coverage
        # dotnet-coverage merge -o coverage-merged.xml -f cobertura -r coverage.cobertura.xml
        # c37b5b03-0377-438a-8fa7-07bef6a77329/coverage.cobertura.xml
        dotnet-coverage merge -o coverage-merged.xml -f cobertura **\\*.xml

    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage/coverage-merged.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '5 95'

    - name: Comment on pull request
      uses: actions/github-script@v7
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
            const fs = require('fs');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: fs.readFileSync('code-coverage-results.md', 'utf8')
            })